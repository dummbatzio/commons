fragment TaskLinkFields on TaskLinkDto {
  id
  label
  url
}

fragment TaskCategoryFields on TaskCategoryDto {
  id
  name
  parent {
    id
    name
  }
}

fragment TaskFields on TaskDto {
  id
  title
  description
  priority
  expense
  factor
  due
  categories {
    ...TaskCategoryFields
  }
  type
  repeat
  status
  parent {
    id
    title
    status
  }
  series {
    id
    status
    due
  }
  links {
    ...TaskLinkFields
  }
}

query GetPaginatedTasks(
  $skip: Int!
  $take: Int!
  $where: TaskFilterWhereInput
) {
  tasks(skip: $skip, take: $take, where: $where) {
    totalCount
    skip
    take
    items {
      ...TaskFields
    }
  }
}

query GetMyPaginatedTasks(
  $skip: Int!
  $take: Int!
  $where: TaskFilterWhereInput
) {
  tasks(skip: $skip, take: $take, where: $where) {
    totalCount
    skip
    take
    items {
      ...TaskFields
    }
  }
}

mutation CreateTask($input: TaskInput!) {
  createTask(input: $input) {
    ...TaskFields
  }
}

mutation UpdateTask($input: TaskInput!) {
  updateTask(input: $input) {
    ...TaskFields
  }
}

mutation DeleteTask($id: ID!) {
  deleteTask(id: $id)
}

mutation AssignTask($input: AssignmentInput!) {
  assignTask(input: $input)
}

mutation CompleteTask($taskId: String!) {
  completeTask(taskId: $taskId) {
    id
    status
  }
}

query GetTaskCategories($parentId: String, $nameLike: String) {
  taskCategories(parentId: $parentId, nameLike: $nameLike) {
    ...TaskCategoryFields
  }
}

mutation CreateTaskCategory($name: String!, $parentId: String) {
  createTaskCategory(input: { name: $name, parentId: $parentId }) {
    ...TaskCategoryFields
  }
}
