# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TokensDto {
  accessToken: String!
  refreshToken: String!
}

type BaseDto {
  id: ID!
}

type FileDto {
  id: ID!
  filename: String!
  path: String!
  mimetype: String
}

type UserDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  avatar: FileDto
  status: String!
  visibility: String!
  wallet: BaseDto!
  firstname: String
  lastname: String
  bio: String
  phone: String
  username: String!
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SessionDto {
  accessToken: String!
  refreshToken: String!
  user: UserDto!
}

type WalletTransactionDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: String!
  amount: Int!
  comment: String
}

type WalletDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  balance: Int
  transactions: [WalletTransactionDto!]
}

type OrganizationDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  avatar: FileDto
  status: String!
  visibility: String!
  wallet: BaseDto!
  name: String!
  description: String
}

type OrganizationMemberDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: UserDto!
  role: String!
}

type TaskCategoryDto {
  id: ID!
  name: String!
  parent: TaskCategoryDto
}

type TaskLinkDto {
  id: ID!
  label: String!
  url: String!
}

type TaskDto {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String
  status: String!
  type: String
  categories: [TaskCategoryDto!]
  priority: String!
  expense: Int!
  factor: Float!
  due: DateTime
  repeat: String
  parent: TaskDto
  series: [TaskDto!]
  links: [TaskLinkDto!]
}

type PaginatedTasksDto {
  totalCount: Int!
  skip: Int!
  take: Int!
  items: [TaskDto!]!
}

type Query {
  myWallet: WalletDto!
  userWallet(userId: String!): WalletDto!
  organizationWallet(organizationId: String!): WalletDto!
  myOrganizations: [OrganizationDto!]!
  me: UserDto!
  tasks(skip: Int! = 0, take: Int! = 25, where: TaskFilterWhereInput): PaginatedTasksDto!
  myTasks(skip: Int! = 0, take: Int! = 25, where: TaskFilterWhereInput): PaginatedTasksDto!
  taskCategories(parentId: String, nameLike: String): [TaskCategoryDto!]!
}

input TaskFilterWhereInput {
  parent: String
  status: [String!]
  type: String
}

type Mutation {
  deposit(input: WalletTransactionInput!): WalletTransactionDto!
  charge(input: WalletTransactionInput!): WalletTransactionDto!
  createOrganization(input: OrganizationInput!): OrganizationDto!
  updateOrganization(input: OrganizationInput!): OrganizationDto!
  addOrganizationMember(input: OrganizationMemberInput!): OrganizationMemberDto!
  updateOrganizationMember(input: OrganizationMemberInput!): OrganizationMemberDto!
  removeOrganizationMember(input: OrganizationMemberInput!): OrganizationMemberDto!
  signUp(input: SignUpInput!): UserDto!
  signIn(input: SignInInput!): SessionDto!
  refreshTokens(token: String!): TokensDto!
  createTask(input: TaskInput!): TaskDto!
  updateTask(input: TaskInput!): TaskDto!
  deleteTask(id: ID!): Boolean!
  assignTask(input: AssignmentInput!): Boolean!
  completeTask(taskId: String!): TaskDto!
  createTaskCategory(input: TaskCategoryInput!): TaskCategoryDto!
}

input WalletTransactionInput {
  walletId: ID!
  amount: Int!
  comment: String
}

input OrganizationInput {
  id: ID
  avatarId: String
  visibility: String
  name: String
  description: String
}

input OrganizationMemberInput {
  userId: ID!
  organizationId: ID!
  isAdmin: Boolean! = false
}

input SignUpInput {
  username: String!
  email: String!
  password: String!
}

input SignInInput {
  email: String!
  password: String!
}

input TaskInput {
  id: ID
  title: String!
  description: String
  type: String
  categoryIds: [String!]
  priority: String! = "none"
  expense: Int! = 0
  factor: Float! = 1
  due: DateTime
  repeat: String = "none"
  links: [TaskLinkInput!]
}

input TaskLinkInput {
  id: ID
  label: String!
  url: String!
}

input AssignmentInput {
  userId: String!
  taskId: String!
}

input TaskCategoryInput {
  parentId: String
  name: String!
}