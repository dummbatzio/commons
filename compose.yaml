services:
  commonsdb-api:
    build:
      context: ./api
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:5432}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PORT=${PORT:5000}

      - JWT_SECRETJWT_SECRET
      - JWT_TOKEN_AUDIENCE=${JWT_TOKEN_AUDIENCE}
      - JWT_TOKEN_ISSUER=${JWT_TOKEN_ISSUER}
      - JWT_ACCESS_TOKEN_TTL=${JWT_ACCESS_TOKEN_TTL:3600}
      - JWT_REFRESH_TOKEN_TTL=${JWT_REFRESH_TOKEN_TTL:86400}

      - DATABASE_URL=${DATABASE_URL}
    logging:
      options:
        max-size: 10m

  postgres:
    image: postgres:16.4-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      options:
        max-size: 10m

  redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    logging:
      options:
        max-size: 10m

  commonsdb-app:
    build:
      context: ./app
    restart: unless-stopped
    environment:
      - GQL_HOST=${GQL_HOST}
      # node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
      - NUXT_SESSION_PASSWORD=${NUXT_SESSION_PASSWORD:5432}
    logging:
      options:
        max-size: 10m

volumes:
  postgres_data:
  redis_data:
